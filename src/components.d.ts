/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface MeridianButton {

    }
  }

  interface HTMLMeridianButtonElement extends StencilComponents.MeridianButton, HTMLStencilElement {}

  var HTMLMeridianButtonElement: {
    prototype: HTMLMeridianButtonElement;
    new (): HTMLMeridianButtonElement;
  };
  interface HTMLElementTagNameMap {
    'meridian-button': HTMLMeridianButtonElement;
  }
  interface ElementTagNameMap {
    'meridian-button': HTMLMeridianButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'meridian-button': JSXElements.MeridianButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface MeridianButtonAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MeridianMapIcon {

    }
  }

  interface HTMLMeridianMapIconElement extends StencilComponents.MeridianMapIcon, HTMLStencilElement {}

  var HTMLMeridianMapIconElement: {
    prototype: HTMLMeridianMapIconElement;
    new (): HTMLMeridianMapIconElement;
  };
  interface HTMLElementTagNameMap {
    'meridian-map-icon': HTMLMeridianMapIconElement;
  }
  interface ElementTagNameMap {
    'meridian-map-icon': HTMLMeridianMapIconElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'meridian-map-icon': JSXElements.MeridianMapIconAttributes;
    }
  }
  namespace JSXElements {
    export interface MeridianMapIconAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MeridianMapMarker {

    }
  }

  interface HTMLMeridianMapMarkerElement extends StencilComponents.MeridianMapMarker, HTMLStencilElement {}

  var HTMLMeridianMapMarkerElement: {
    prototype: HTMLMeridianMapMarkerElement;
    new (): HTMLMeridianMapMarkerElement;
  };
  interface HTMLElementTagNameMap {
    'meridian-map-marker': HTMLMeridianMapMarkerElement;
  }
  interface ElementTagNameMap {
    'meridian-map-marker': HTMLMeridianMapMarkerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'meridian-map-marker': JSXElements.MeridianMapMarkerAttributes;
    }
  }
  namespace JSXElements {
    export interface MeridianMapMarkerAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MeridianMap {
      'floorId': string;
      'locationId': string;
    }
  }

  interface HTMLMeridianMapElement extends StencilComponents.MeridianMap, HTMLStencilElement {}

  var HTMLMeridianMapElement: {
    prototype: HTMLMeridianMapElement;
    new (): HTMLMeridianMapElement;
  };
  interface HTMLElementTagNameMap {
    'meridian-map': HTMLMeridianMapElement;
  }
  interface ElementTagNameMap {
    'meridian-map': HTMLMeridianMapElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'meridian-map': JSXElements.MeridianMapAttributes;
    }
  }
  namespace JSXElements {
    export interface MeridianMapAttributes extends HTMLAttributes {
      'floorId'?: string;
      'locationId'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MeridianTextbox {
      'onUpdate': (value: string) => void;
      'value': string;
    }
  }

  interface HTMLMeridianTextboxElement extends StencilComponents.MeridianTextbox, HTMLStencilElement {}

  var HTMLMeridianTextboxElement: {
    prototype: HTMLMeridianTextboxElement;
    new (): HTMLMeridianTextboxElement;
  };
  interface HTMLElementTagNameMap {
    'meridian-textbox': HTMLMeridianTextboxElement;
  }
  interface ElementTagNameMap {
    'meridian-textbox': HTMLMeridianTextboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'meridian-textbox': JSXElements.MeridianTextboxAttributes;
    }
  }
  namespace JSXElements {
    export interface MeridianTextboxAttributes extends HTMLAttributes {
      'onUpdate'?: (value: string) => void;
      'value'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
